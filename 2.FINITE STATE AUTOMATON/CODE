class FiniteStateAutomaton:
    def __init__(self):
        self.states = ['q0', 'q1', 'q2']  
        self.alphabet = ['a', 'b'] 
        self.transitions = { 
            'q0': {'a': 'q1', 'b': 'q0'},
            'q1': {'a': 'q1', 'b': 'q2'},
            'q2': {'a': 'q1', 'b': 'q0'}
        }
        self.initial_state = 'q0'  
        self.accepting_states = ['q2']  
    def run(self, input_string):
        current_state = self.initial_state
        for char in input_string:
            if char not in self.alphabet:
                return False  
            current_state = self.transitions[current_state][char]
        return current_state in self.accepting_states
fsa = FiniteStateAutomaton()
input_strings = ['ab', 'aab', 'abab', 'ba', 'bb']
for input_string in input_strings:
    if fsa.run(input_string):
        print(f"'{input_string}' is accepted by the automaton.")
    else:
        print(f"'{input_string}' is not accepted by the automaton.")
