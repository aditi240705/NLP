import random
from collections import defaultdict

class BigramModel:
    def __init__(self):
        self.bigram_freq = defaultdict(int)
        self.unigram_freq = defaultdict(int)
        self.vocab = set()

    def train(self, text):
        tokens = text.split()
        self.vocab = set(tokens)
        for i in range(len(tokens) - 1):
            bigram = (tokens[i], tokens[i + 1])
            self.bigram_freq[bigram] += 1
            self.unigram_freq[tokens[i]] += 1

    def generate_text(self, length):
        current_word = random.choice(list(self.vocab))
        text = [current_word]
        for _ in range(length - 1):
            next_word_candidates = [(bigram, freq) for bigram, freq in self.bigram_freq.items() if bigram[0] == current_word]
            if not next_word_candidates:
                break
            next_word_candidates.sort(key=lambda x: x[1], reverse=True)
            next_word = random.choice([candidate[0][1] for candidate in next_word_candidates])
            text.append(next_word)
            current_word = next_word
        return ' '.join(text)

def main():
    model = BigramModel()
    text = input("Please enter a text to train the model: ")
    model.train(text)
    length = int(input("Please enter the length of the text to generate: "))
    generated_text = model.generate_text(length)
    print("Generated text:")
    print(generated_text)

if __name__ == "__main__":
    main()
